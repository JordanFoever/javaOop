package com.hxut12.java1;

/**
 * @author weijiangquan
 * @date 2022/4/18 -17:45
 *
 * 方法的重写
 *  1.重写,子类继承父类后,可以对父类中同名参数的方法,进行覆盖操作
 *  2.应用,重写以后,当创建子类的对象以后,通过子类对象调用父类中的同名同参的方法时,实际执行的是子类重写的方法
 *
 *  3.重写的规定
 *      方法的声明:权限修饰符 返回值类型 方法名(形参列表){
 *          //方法体
 *      }
 *     预定:子类称为重写的方法,父类叫被重写的方法
 *     ① 子类重写的方法名称和形参列表和父类被重写的相同
 *     ② 子类重写的方法的权限修饰符不小与父类被重写的权限修饰符
 *          ->特殊情况,子类不能重写父类中被声明为private权限方法
 *     ③ 返回值类型
 *           >父类被重写的方法的返回值类型是void,则子类重写的方法的返回值类型只能是void
 *           > 父类父类被重写的方法的返回值类型是A类型,则子类重写的方法的返回值类型可以是A类或A类的子类
 *           > 父类被重写的方法的返回值类型是基本数据类型,则子类重写的方法的返回值类型必须是相同的基本数据类型(注意)
 *                  比如子类是 double 这个时候父类也是 double
 *     ④ 异常子类重写的方法抛出的异常类型不大于父类被重写的方法抛出的异常类型(到异常处理的时候再说)
 *      *************************************
 *      子类和父类中同名同参数的方法要么都声明为非static,要么都声明为static的.(不是重写)
 *
 */

public class PersonTest {

    public static void main(String[] args) {
        Student s = new Student("计算机科学与技术");
        s.eat();
        s.walk(10);
        s.study();
    }
}


