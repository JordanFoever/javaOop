package com.hxut12.java3;

/**
 * @author weijiangquan
 * @date 2022/4/18 -21:12
 *
 *
 *  面向对象的特征三:多态性 （运行时多态        ）
 *
 *  1.理解多态:一个事物的多种形态。
 *  2.何为多态性:父类的引用指向子类的对象(或者子类的对象赋给父类的引用)
 *  3.多态的使用，虚拟方法的调用
 *     有了对象的多态性以后，我们在编译期，只能调用父类中声明的方法，
 *     但是在执行期，我们实际执行的是子类重写父类的方法
 *  总结:编译看左边，运行看右边
 *
 *  4.多态的使用的前提:①类的继承关系 ②要有方法的重写
 *
 *  5.对象的多态性:只适用于方法，不适用于属性(编译和运行都看左边)
 *
 *
 *  为什么super(...)或this(...)调用语句只能作为构造器中的第一句出现？
 *  答：无论通过哪个构造器继承父类后，继承父类中所有的属性和方法，因此子类有必要知道父类如何为对象进行初始化
 *
 *
 */
public class PersonTest{

    public static void main(String[] args) {
        Person p1 = new Person();
        p1.eat();

        Man man =new Man();
        man.eat();
        man.age = 25;
        man.earnMoney();

        System.out.println("***********************");
        //***************************************
        //对象的多态性 父类的引用指向子类的对象
        Person p2 = new Man();
        // Person p3 = new Woman();
        // 多态的使用,当调用子父类同名的方法时，实际执行的是子类重写父类的方法---虚拟方法调用
        p2.eat();
        p2.walk();

    }
}

